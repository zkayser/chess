name: Elixir CI

on:
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: elixir:1.18.4-otp-28
    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chess_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install hex and rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Cache Mix dependencies
        id: cache-mix-deps
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ~/.mix
          key: ${{ runner.os }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Get dependencies and compile
        run: mix do deps.get, compile

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            deps
            _build

  test:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: elixir:1.18.4-otp-28
    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chess_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Install hex and rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Run tests
        run: mix test

  format:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: elixir:1.18.4-otp-28
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Install hex and rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Check format
        run: mix format --check-formatted

  credo:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: elixir:1.18.4-otp-28
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Install hex and rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Run Credo
        run: mix credo --strict

  dialyzer:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: elixir:1.18.4-otp-28
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Install hex and rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Run Dialyzer
        run: mix dialyzer
