on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MIX_ENV: test
  DOCKER_COMPOSE_FILE: .devcontainer/docker compose.yml

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('''**/mix.lock''') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache PLT
        uses: actions/cache@v4
        id: plt_cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ hashFiles('''**/mix.lock''') }}
          restore-keys: |
            ${{ runner.os }}-plt-

      - name: Start services
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d --build

      - name: Wait for database
        run: |
          for i in {1..10}; do
            if docker compose -f $DOCKER_COMPOSE_FILE exec db pg_isready -U postgres; then
              echo "Database is ready!"
              break
            fi
            echo "Waiting for database..."
            sleep 2
          done

      - name: Install dependencies
        run: docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix deps.get

      - name: Compile
        run: docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix compile

      - name: Static Analysis and Format Check
        run: |
          docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix credo --strict
          docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix format --check-formatted

      - name: Run tests
        run: docker compose -f $DOCKER_COMPOSE_FILE exec -T -e DATABASE_HOSTNAME=db app mix test

      - name: Run dialyzer
        run: |
          if [ "${{ steps.plt_cache.outputs.cache-hit }}" != 'true' ]; then
            docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix dialyzer --plt
          fi
          docker compose -f $DOCKER_COMPOSE_FILE exec -T app mix dialyzer --format github